generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Show {
  id           String   @id @default(uuid()) @db.Uuid
  externalId   Int      @unique @map("external_id")
  name         String?
  detailed_url String?  @map("detailed_url")
  type_num     String?
  image        String?
  desc         String?  @db.Text
  partnerId    Int?     @map("partner_id")
  ageLimit     Int?     @default(0) @map("age_limit")
  shortInfo    String?  @map("short_info") @db.Text
  fullInfo     String?  @map("full_info") @db.Text
  publDate     String?  @map("publ_date")
  premiereDate String?  @map("premiere_date")
  duration     String?
  minPrice     Decimal? @map("min_price") @db.Decimal(10, 2)
  maxPrice     Decimal? @map("max_price") @db.Decimal(10, 2)
  isPushkin    Boolean? @default(false) @map("is_pushkin")
  shopId       String?  @map("shop_id")
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  updatedAt    DateTime @updatedAt @db.Timestamp(6)

  events         Event[]
  showCategories ShowCategory[]

  @@index([shopId])
  @@map("shows")
}

model Event {
  id               String    @id @default(uuid()) @db.Uuid
  externalId       Int       @unique @map("external_id")
  name             String?
  showId           Int?      @map("show_id")
  timeType         Int?      @map("time_type")
  date             DateTime?
  fixDate          DateTime? @map("fix_date")
  endDate          DateTime? @map("end_date")
  timestamp        BigInt?
  timezone         String?
  isPushkin        Boolean?  @default(false) @map("is_pushkin")
  locationId       Int?      @map("location_id")
  locationName     String?   @map("location_name")
  serviceName      String?   @map("service_name")
  count            Int?      @default(0)
  minPrice         Decimal?  @map("min_price") @db.Decimal(10, 2)
  maxPrice         Decimal?  @map("max_price") @db.Decimal(10, 2)
  image            String?
  ageLimit         Int?      @default(0) @map("age_limit")
  desc             String?
  onlyPrivateSells Boolean?  @default(false) @map("only_private_sells")
  isSeason         Boolean?  @default(false) @map("is_season")
  isCovidFree      Boolean?  @default(false) @map("is_covid_free")
  isHideTime       Boolean?  @default(false) @map("is_hide_time")
  pipelineEventId  Int?      @map("pipeline_event_id")
  isAccessOnlyLink Boolean?  @default(false) @map("is_access_only_link")
  cityId           Int?      @map("city_id")
  address          String?
  createdAt        DateTime  @default(now()) @db.Timestamp(6)
  updatedAt        DateTime  @updatedAt @db.Timestamp(6)

  show       Show?     @relation(fields: [showUuid], references: [id])
  showUuid   String?   @map("show_uuid") @db.Uuid
  building   Building? @relation(fields: [buildingId], references: [id])
  buildingId String?   @map("building_id") @db.Uuid

  @@index([showUuid])
  @@index([buildingId])
  @@index([date])
  @@map("events")
}

model Building {
  id         String   @id @default(uuid()) @db.Uuid
  externalId Int      @unique @map("external_id")
  name       String
  cityId     Int?     @map("city_id")
  address    String
  lat        String?
  lon        String?
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @updatedAt @db.Timestamp(6)

  events Event[]

  @@index([cityId])
  @@map("buildings")
}

model ShowCategory {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  showId    String   @map("show_id") @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)

  show Show @relation(fields: [showId], references: [id], onDelete: Cascade)

  @@index([showId])
  @@map("show_categories")
}

model User {
  id                String   @id @default(uuid()) @db.Uuid
  username          String   @unique @db.VarChar
  hash              String   @db.VarChar
  email             String?  @db.VarChar
  hashedAccessToken String?  @db.VarChar
  hashedRt          String?  @db.VarChar
  role              String?  @default("user") @db.VarChar
  createdAt         DateTime @default(now()) @db.Timestamp(6)
  updatedAt         DateTime @updatedAt @db.Timestamp(6)

  @@map("users")
}
