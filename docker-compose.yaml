services:

  redis:
    image: "docker.io/bitnami/redis:latest"
    container_name: redis
    environment:
      TZ: "Europe/Omsk"
      ALLOW_EMPTY_PASSWORD: "yes"
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT_NUMBER: ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - app
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    mem_limit: 2G
    cpus: 4.0


  postgres:
    image: "docker.io/bitnami/postgresql:latest"
    restart: always
    shm_size: 128mb
    environment:
      POSTGRESQL_USERNAME: ${DATABASE_USERNAME}
      POSTGRESQL_DATABASE: ${DATABASE_NAME}
      POSTGRESQL_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRESQL_PORT_NUMBER: ${DATABASE_PORT}
      TZ: "Europe/Omsk"
      ALLOW_EMPTY_PASSWORD: "no"
      POSTGRESQL_VOLUME_DIR: "/bitnami/postgresql"
      POSTGRESQL_ENABLE_TLS: "no"
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    container_name: "postgres"
    volumes:
      - pg_data:/bitnami/postgresql
    networks:
      - app
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $DATABASE_USERNAME" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
    mem_limit: 2G
    cpus: 4.0

  nestjs:
    build:
      context: .
      dockerfile: Dockerfile
    image: "nestjs-api:latest"
    env_file:
      - prod.env
    environment:
      TZ: "Europe/Omsk"
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
      - redis
    container_name: "nestjs-app"
    networks:
      - app
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    mem_limit: 2G
    cpus: 4.0
    sysctls:
      net.core.somaxconn: 1024
      net.ipv4.tcp_syncookies: 1
    volumes:
      - uploads_data:/app/uploads
      - static_data:/app/static


volumes:
  pg_data:
  static_data:
  uploads_data:


networks:
  app:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.100.0/24
